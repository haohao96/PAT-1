int n, m, k, q, index = 1;
	cin >> n >> m >> k >> q;
	vector<int> time(k + 1), ans(k + 1);
	vector<line> window(n + 1);
	vector<bool> sorry(k + 1, false);
	for (int i = 1; i <= k; i++)
	{
		cin >> time[i];
	}

	//n*m inside yellow line	
	for (int i = 1; i <= m; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if (index <= k)
			{
				window[j].q.push(time[index]);
				if (window[j].endTime >= 540)
				{
					sorry[index] = true;
				}
				window[j].endTime += time[index];
				if (i == 1)
				{
					window[j].popTime = window[j].endTime;
				}
				index++;
				ans[index] = window[j].endTime;
			}
			
		}
	}

	while (index <= k)
	{
		int minPop = window[1].popTime;
		int tempWindow=1;
		for (int i = 2; i <= n; i++)
		{
			if (window[i].popTime < minPop)
			{
				minPop = window[i].popTime;
				tempWindow = i;
			}
		}
		window[tempWindow].q.pop();
		window[tempWindow].q.push(time[index]);
		window[tempWindow].popTime += window[tempWindow].q.front();
		if (window[tempWindow].endTime >= 540)
		{
			sorry[index] = true;
		}
		window[tempWindow].endTime += time[index];
		ans[index] = window[tempWindow].endTime;
		index++;
	}

	//output
	
	for (int i = 1; i <= q; i++)
	{
		int query;
		cin >> query;
		if (sorry[query])
		{
			cout << "Sorry\n" << endl;
		}
		else
		{
			printf("%02d:%02d\n", (ans[query] + 480) / 60, (ans[query] + 480) % 60);
		}
	}
